Найдем значение максимального префикса, состоящего только из х.
Для этого будем хранить информацию об обработанных регулярных выражениях с помощью стека. А именно, чтобы произвести какую-то операцию нам надо знать максимальный префикс слова, состоящий только из х; максимальную длину слова, состоящего только из х, которое можно получить по текущему регулярному выражению; и удовлетворяет ли пустое слово этой регулярке. Собственно, это хранит структура Prefix в полях lengthPrefix; wholeWord; isEps соответсвенно.
Считываем регулярку по одному символу. Если символ не принадлежит алфавиту {abc1.+*}, то выводим сообщение о некорректности выражения(так же мы его выводим, если встретили оператор, но его не к чему применить, ибо стек пуст).
Если символ является буквой или 1, то кладем в стек соответствующие значения.
Если это оператор, то рассматриваем случаи.
1. Встретили '+':
Объединяем языки, задаваемые регулярками. В стек пойдет {максимальный префикс из двух выражений; максимальная длина слова из х из двух выражений; 1, если хотя бы одно может быть пустым; 0, иначе}
2. Встретили '*':
Если слово может полностью состоять только из х, то кладем в стек {INF, INF, 1}, так как в этом случае мы можем получить префикс из х любой длины.
Иначе наибольшая длина префикса не изменяется, но слово только из х у нас уже не получится. Поэтому кладем в стек {максимальная длина префикса первого выражения, 0, 1}.
3. Встретили '.':
Разберем случаи для максимальной длины префикса.
1) Первое выражение может быть пустым словом. Берем макс. префикс 2-ого выражения.
2) Слово, состоящее только из х, удовлетворяет первому выражению. Поэтому берем сумму максимально возможного слова только из х из первого выражения и макс. префикс второго.
3) Второе выражение может быть пустым словом. Берем префикс первого.
В стек идет максимум из этих случаев.
Аналогично разбираем случаи для максимальной длины слова, состоящего из х.
1)Первое выражение может быть пустым. Длина макс слова из х из второго выражения не ноль.
2) Второе выражение может быть пустым. Длина макс слова из х из первого выражения не ноль.
3)Оба выражения содержат слова не нулевой длины только из х.
В стек кладем максимум из этих случаев.
Слово будет пустым, только если пустое слово удовлетворяет обоим выражениям. 